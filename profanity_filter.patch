--- profanity_filter.py	2018-11-08 21:58:32.577502389 -0700
+++ profanity_filter_fixed.py	2018-11-08 21:59:14.746587877 -0700
@@ -155,6 +155,7 @@

         # What to be censored - should not be modified by user
         self._censor_dictionaries = None
+        self._update_profane_word_dictionary_files()
         self._load_profane_word_dictionaries()

         # Dict from profane word to censored word that is generated after censoring
@@ -212,7 +212,8 @@
         if len(value) != 1:
             raise ValueError("Censor char must be str of length 1")
         self._censor_char = value
-        del self.__dict__['_config']
+        with suppress(KeyError):
+            del self.__dict__['_config']

     @property
     def censor_whole_words(self) -> bool:
@@ -221,7 +222,8 @@
     @censor_whole_words.setter
     def censor_whole_words(self, value: bool) -> None:
         self._censor_whole_words = value
-        del self.__dict__['_config']
+        with suppress(KeyError):
+            del self.__dict__['_config']

     @property
     def custom_profane_word_dictionaries(self) -> ProfaneWordDictionaries:
@@ -245,7 +247,8 @@
     @deep_analysis.setter
     def deep_analysis(self, value: bool) -> None:
         self._deep_analysis = value
-        del self.__dict__['_config']
+        with suppress(KeyError):
+            del self.__dict__['_config']

     @property
     def extra_profane_word_dictionaries(self) -> ProfaneWordDictionaries:
@@ -271,9 +274,11 @@
     @languages.setter
     def languages(self, value: LanguagesAcceptable) -> None:
         self._languages = OrderedSet(value)
-        del self.__dict__['languages_str']
+        with suppress(KeyError):
+            del self.__dict__['languages_str']
         _ = self.languages_str
-        del self.__dict__['_config']
+        with suppress(KeyError):
+            del self.__dict__['_config']
         self.clear_cache()
         self.morphs = None
         self.nlps = None
@@ -291,7 +296,8 @@
     @max_relative_distance.setter
     def max_relative_distance(self, value: float) -> None:
         self._max_relative_distance = value
-        del self.__dict__['_config']
+        with suppress(KeyError):
+            del self.__dict__['_config']

     @property
     def morphs(self) -> Morphs:
@@ -372,7 +378,8 @@
     def clear_cache(self) -> None:
         with suppress(KeyError):
             del self.__dict__['profane_word_dictionaries']
-        _ = self.profane_word_dictionaries
+        with suppress(AttributeError):
+            _ = self.profane_word_dictionaries
         self._censored_words = defaultdict(lambda: {})
         self._words_with_no_profanity_inside = defaultdict(lambda: set())

